#include<iostream>
#include<stdio.h>
using namespace std;
struct SinhVien{
	int masv;
	string tensv,lop;
	float diemtk;
	string hanhkiem;
};
struct node{
	SinhVien data;
	node *next;
};
struct list{
	node *head;
	node *tail;
};
void xuat(SinhVien sv);
void create_list(list &l)
{
	l.head=l.tail=NULL;
}
node * create_node(SinhVien &sv)
{
	node *p = new node;
	if(p==NULL)
	{
		cout<<"Khong du bo nho!!!";
	}
	p->data = sv;
	p->next=NULL;
	return p;
}
node *search(list &l)
{
	for(node *p=l.head;p!=NULL;p=p->next)
	{
		if(p->data.lop=="D13CNPM")
		{
			return p;
		}
	}
	return NULL;
}
void dele_tail(list &l)
{
	if(l.head!=NULL)
	{
		node *p=l.head;
		while(p->next!=l.tail)
		{
			p=p->next;	
		}
		delete l.tail;
		p->next=NULL;
		l.tail=p;	
	}
}
void check(list &l)
{
	node *q = search(l);
	if(q!=NULL)
	{
		cout<<"\nDanh sach Sinh Vien D13CNPM :\n";
		for(node *p=l.head;p!=NULL;p=p->next)
		{
			if(p->data.lop=="D13CNPM")
			{
				xuat(p->data);
			}
		}
	}
	else
	{
		cout<<"\nKhong co Sinh Vien D13CNPM \n";
	}
}
void nhap(SinhVien &sv)
{
	cout<<"Ma sinh vien : ";
	cin>>sv.masv;
	cout<<"Ten sinh vien : ";
	fflush(stdin);
	getline(cin,sv.tensv);
	cout<<"Lop : ";
	fflush(stdin);
	getline(cin,sv.lop);
	cout<<"Diem tong ket : ";
	cin>>sv.diemtk;
	cout<<"Hanh kiem : ";
	fflush(stdin);
	getline(cin,sv.hanhkiem);
}
void add_tail(list &l, node *p)
{
	if(l.head==NULL)
	{
		l.head=l.tail=p;
	}
	else
	{
		l.tail->next=p;
		l.tail=p;
	}
}
void add_head(list &l,node *p)
{
	if(l.head==NULL)
	{
		l.head=l.tail=p;
	}
	else
	{
		l.head=p->next;
		l.head=p;
	}
}
void xuat(SinhVien sv)
{
	cout<<sv.masv<<" "<<sv.tensv<<" "<<sv.lop<<" "<<sv.diemtk<<" "<<sv.hanhkiem<<endl;
}
void input(list &l)
{
	int n;
	cout<<"Tong so Sinh Vien : ";
	cin>>n;
	cout<<"Nhap thong tin Sinh Vien :\n";
	for(int i=0;i<n;i++)
	{
		cout<<"Sinh Vien "<<i<<" :\n"; 
		SinhVien sv;
		nhap(sv);
		cout<<endl;
		node *p = create_node(sv);
		if(p!=NULL)
		{
			add_tail(l,p);
		}
	}
}
void output(list &l)
{
	cout<<"\nThong tin Sinh Vien :\n";
	for(node *p=l.head;p!=NULL;p=p->next)
	{
		xuat(p->data);
	}
}
int main()
{
	list l;
	create_list(l);
	input(l);
	output(l);
	check(l);
	dele_tail(l);
	output(l);	
	return 0;
}
